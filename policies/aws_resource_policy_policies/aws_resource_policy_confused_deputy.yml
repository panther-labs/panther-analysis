AnalysisType: policy
Filename: aws_resource_policy_confused_deputy.py
PolicyID: "AWS.ResourcePolicy.ConfusedDeputyProtection"
DisplayName: "AWS Resource Policy Confused Deputy Protection"
Enabled: true
ResourceTypes:
  - AWS.S3.Bucket
  - AWS.KMS.Key
  - AWS.CloudWatch.LogGroup
  - AWS.Lambda.Function
  # TODO(Panther): Add support for these resource types once they are supported by Panther:
  # - AWS.SecretsManager.Secret     # Secrets Manager resource policies
  # - AWS.SQS.Queue                 # SQS queue policies
  # - AWS.SNS.Topic                 # SNS topic policies
  # - AWS.APIGateway.RestAPI        # API Gateway resource policies
  # - AWS.ECR.Repository            # ECR repository policies
  # - AWS.EFS.FileSystem           # EFS file system policies
  # - AWS.Backup.Vault             # Backup vault policies
  # - AWS.CodeArtifact.Repository  # CodeArtifact repository policies
  # - AWS.EventBridge.EventBus     # EventBridge event bus policies
  # - AWS.Glacier.Vault            # Glacier vault policies
  # Each of these services supports resource-based policies and can be accessed by AWS services,
  # making them potential targets for confused deputy attacks.
Tags:
  - AWS
  - Security Control
  - Best Practices
Severity: High
Description: >
  Ensures that resource policies (S3 bucket policies, KMS key policies, CloudWatch Logs resource policies, etc.) with service principals 
  include conditions to prevent the confused deputy problem. This includes checking for required condition keys like aws:SourceArn 
  or aws:SourceAccount, as well as service-specific controls like aws:PrincipalIsAWSService.
  
  Note that some AWS services may have additional service-specific controls:
  - KMS: Can use encryption context keys for additional security
  - CloudWatch Logs: May use service-specific condition keys
  - S3: May use bucket-specific condition keys
  - Lambda: Can use lambda:FunctionUrlAuthType for function URL invocations
  - Secrets Manager: Can use secretsmanager:ResourceTag condition keys
  - SQS: Can use sqs:* condition keys for queue operations
  - SNS: Can use sns:* condition keys for topic operations
  - API Gateway: Can use execute-api:* condition keys for API operations
Runbook: >
  Update the resource policy to include appropriate conditions when a service principal is specified:
  1. Add aws:SourceArn, aws:SourceAccount, aws:SourceOrgID, or aws:SourceOrgPaths condition keys
  2. Consider using aws:PrincipalIsAWSService for explicit service principal verification
  3. Review service-specific documentation for additional recommended condition keys
Reference: https://docs.aws.amazon.com/IAM/latest/UserGuide/confused-deputy.html
Tests:
  - Name: S3 - Compliant Policy with Service Principal and Condition
    ExpectedResult: true
    Resource:
      {
        "Policy": '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"cloudtrail.amazonaws.com"},"Action":"s3:PutObject","Resource":"arn:aws:s3:::my-example-bucket/*","Condition":{"StringEquals":{"aws:SourceAccount":"123456789012"}}}]}'
      }

  - Name: S3 - Non-Compliant Policy with Service Principal and No Condition
    ExpectedResult: false
    Resource:
      {
        "Policy": '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"cloudtrail.amazonaws.com"},"Action":"s3:PutObject","Resource":"arn:aws:s3:::my-example-bucket/*"}]}'
      }
  
  - Name: S3 - Policy without Service Principal
    ExpectedResult: true
    Resource:
      {
        "Policy": '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"AWS":"arn:aws:iam::123456789012:root"},"Action":"s3:GetObject","Resource":"arn:aws:s3:::my-example-bucket/*"}]}'
      }

  - Name: KMS - Compliant Policy with Service Principal and PrincipalIsAWSService
    ExpectedResult: true
    Resource:
      {
        "Policy": '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"logs.amazonaws.com"},"Action":["kms:Encrypt","kms:Decrypt"],"Resource":"*","Condition":{"Bool":{"aws:PrincipalIsAWSService":"true"},"StringEquals":{"aws:SourceAccount":"123456789012"}}}]}'
      }

  - Name: KMS - Non-Compliant Policy with Service Principal and No Condition
    ExpectedResult: false
    Resource:
      {
        "Policy": '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"logs.amazonaws.com"},"Action":["kms:Encrypt","kms:Decrypt"],"Resource":"*"}]}'
      }

  - Name: CloudWatch Logs - Compliant Policy with Service Principal and Condition
    ExpectedResult: true
    Resource:
      {
        "ResourcePolicy": '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"es.amazonaws.com"},"Action":"logs:PutLogEvents","Resource":"arn:aws:logs:*:123456789012:*","Condition":{"StringEquals":{"aws:SourceAccount":"123456789012"}}}]}'
      }

  - Name: CloudWatch Logs - Non-Compliant Policy with Service Principal and No Condition
    ExpectedResult: false
    Resource:
      {
        "ResourcePolicy": '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"es.amazonaws.com"},"Action":"logs:PutLogEvents","Resource":"arn:aws:logs:*:123456789012:*"}]}'
      }

  - Name: CloudWatch Logs - Policy with Wildcard Principal and No Condition
    ExpectedResult: false
    Resource:
      {
        "ResourcePolicy": '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":"*","Action":"logs:PutLogEvents","Resource":"arn:aws:logs:*:123456789012:*"}]}'
      }

  - Name: Lambda - Compliant Policy with Service Principal and Function URL Auth
    ExpectedResult: true
    Resource:
      {
        "Policy": '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"apigateway.amazonaws.com"},"Action":"lambda:InvokeFunction","Resource":"arn:aws:lambda:us-west-2:123456789012:function:my-function","Condition":{"StringEquals":{"aws:SourceAccount":"123456789012","lambda:FunctionUrlAuthType":"AWS_IAM"}}}]}'
      }

  - Name: Lambda - Compliant Policy with Service Principal and Source ARN
    ExpectedResult: true
    Resource:
      {
        "Policy": '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"s3.amazonaws.com"},"Action":"lambda:InvokeFunction","Resource":"arn:aws:lambda:us-west-2:123456789012:function:my-function","Condition":{"ArnLike":{"aws:SourceArn":"arn:aws:s3:::my-bucket"}}}]}'
      }

  - Name: Lambda - Non-Compliant Policy with Service Principal and No Condition
    ExpectedResult: false
    Resource:
      {
        "Policy": '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"s3.amazonaws.com"},"Action":"lambda:InvokeFunction","Resource":"arn:aws:lambda:us-west-2:123456789012:function:my-function"}]}'
      }

  - Name: No Policy Present
    ExpectedResult: true
    Resource:
      {
        "Arn": "arn:aws:logs:us-west-2:123456789012:log-group:test"
      }

  - Name: KMS Key Policy Without Required Conditions
    ExpectedResult: false
    Resource:
      {
        "Policy": '{
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {"Service": "cloudtrail.amazonaws.com"},
              "Action": "kms:Encrypt",
              "Resource": "*"
            }
          ]
        }'
      }

  - Name: KMS Key Policy With Required Conditions
    ExpectedResult: true
    Resource:
      {
        "Policy": '{
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {"Service": "cloudtrail.amazonaws.com"},
              "Action": "kms:Encrypt",
              "Resource": "*",
              "Condition": {
                "StringEquals": {
                  "aws:SourceArn": "arn:aws:cloudtrail:us-east-1:123456789012:trail/MyCloudTrail",
                  "aws:SourceAccount": "123456789012"
                }
              }
            }
          ]
        }'
      }

  - Name: KMS Key Policy Without Service Principal
    ExpectedResult: true
    Resource:
      {
        "Policy": '{
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {"AWS": "arn:aws:iam::123456789012:root"},
              "Action": "kms:Encrypt",
              "Resource": "*"
            }
          ]
        }'
      }

  - Name: Log Policy Without Required Conditions
    ExpectedResult: false
    Resource:
      {
        "Policy": '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"lambda.amazonaws.com"},"Action":"logs:PutLogEvents","Resource":"arn:aws:logs:us-east-1:123456789012:log-group:/aws/lambda/my-function:*"}]}',
      }
  - Name: Log Policy With Required Conditions
    ExpectedResult: true
    Resource:
      {
        "Policy": '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"lambda.amazonaws.com"},"Action":"logs:PutLogEvents","Resource":"arn:aws:logs:us-east-1:123456789012:log-group:/aws/lambda/my-function:*","Condition":{"ArnLike":{"aws:SourceArn":"arn:aws:lambda:us-east-1:123456789012:function:my-function"}}}]}',
      }
  - Name: Log Policy Without Service Principal
    ExpectedResult: true
    Resource:
      {
        "Policy": '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"AWS":"arn:aws:iam::123456789012:role/MyRole"},"Action":"logs:PutLogEvents","Resource":"arn:aws:logs:us-east-1:123456789012:log-group:/aws/lambda/my-function:*"}]}',
      }