analysisType: lookup_table
name: greynoise_noise_advanced
refresh:
  roleARN: arn:aws:iam::347758056897:role/panther-greynoise-full-access-role
  objectPath: s3://panther-greynoise-1rwdj37boou9s9tqp8gs19jp9ju9nusw2a-s3alias/luts/data/greynoise/noise_full.jsonl.gz
  periodMinutes: 60
description: Advanced context about known malicious or benign IP addresses from internet scanners.
reference: https://docs.panther.com/enrichment-beta/threat-intelligence/greynoise
enabled: false
logTypeMap:
  primaryKey: ip
  associatedLogTypes:
    - logType: AlphaSOC.Alert
      selectors:
        - "$.event.srcIP"
    - logType: Atlassian.Audit
      selectors:
        - "$.attributes.location.ip"
    - logType: AWS.ALB
      selectors:
        - "clientIp"
    - logType: AWS.CloudTrail
      selectors:
        # add p_any_ip_addresses because we extract ip addresses from polymorphic events
        - "sourceIPAddress"
        - "p_any_ip_addresses"
    - logType: AWS.GuardDuty
      selectors:
        # use p_any_ip_addresses because we extract ip addresses from polymorphic events
        - "p_any_ip_addresses"
    - logType: AWS.S3ServerAccess
      selectors:
        - "remoteip"
    - logType: AWS.VPCDns
      selectors:
        # use p_any_ip_addresses because the answers are variable and not always ip addresses
        - "p_any_ip_addresses"
    - logType: AWS.VPCFlow
      selectors:
        - "dstAddr"
        - "srcAddr"
    - logType: AWS.WAFWebACL
      selectors:
        - "$.httpRequest.clientIp"
    - logType: CiscoUmbrella.CloudFirewall
      selectors:
        - "destinationIp"
        - "sourceIp"
    - logType: CiscoUmbrella.DNS
      selectors:
        - "externalIp"
        - "internalIp"
    - logType: CiscoUmbrella.Proxy
      selectors:
        - "destinationIp"
        - "externalIp"
        - "internalIp"
    - logType: Cloudflare.HttpRequest
      selectors:
        - "ClientIP"
        - "EdgeServerIP"
        - "OriginIP"
    - logType: Cloudflare.Firewall
      selectors:
        - "ClientIP"
    - logType: Cloudflare.Spectrum
      selectors:
        - "ClientIP"
        - "OriginIP"
    - logType: Crowdstrike.ActivityAudit
      selectors:
        - "UserIp"
    - logType: Crowdstrike.DetectionSummary
      selectors:
        - "LocalIP"
        - "OriginSourceIpAddress"
    - logType: Crowdstrike.DNSRequest
      selectors:
        - "IpAddress"
    - logType: Crowdstrike.AIDMaster
      selectors:
        - "aip"
    - logType: Crowdstrike.ManagedAssets
      selectors:
        - "GatewayIP"
    - logType: Crowdstrike.NetworkConnect
      selectors:
        - "LocalAddressIP4"
        - "LocalAddressIP6"
        - "RemoteAddressIP4"
        - "RemoteAddressIP6"
    - logType: Crowdstrike.NetworkListen
      selectors:
        - "LocalAddressIP4"
        - "LocalAddressIP6"
        - "RemoteAddressIP4"
        - "RemoteAddressIP6"
    - logType: Duo.Authentication
      selectors:
        - "$.access_device.ip"
        - "$.auth_device.ip"
    - logType: Box.Event
      selectors:
        - "ip_address"
    - logType: GCP.AuditLog
      selectors:
        - "$.protoPayload.requestMetadata.callerIP"
        - "$.httpRequest.remoteIP"
        - "$.httpRequest.serverIP"
    - logType: GitLab.API
      selectors:
        - "remote_ip"
    - logType: GitLab.Production
      selectors:
        - "remote_ip"
    - logType: Gravitational.TeleportAudit
      selectors:
        - "dst_addr"
        - "src_addr"
    - logType: GSuite.ActivityEvent
      selectors:
        - "ipAddress"
    - logType: GSuite.Reports
      selectors:
        - "ipAddress"
    - logType: Juniper.Access
      selectors:
        # use p_any_ip_addresses because we extract ip addresses but have no fields
        - "p_any_ip_addresses"
    - logType: Juniper.Audit
      selectors:
        - "login_ip"
    - logType: Juniper.Firewall
      selectors:
        - "SRC"
        - "DST"
    - logType: Juniper.Security
      selectors:
        - "source_ip"
    - logType: Lacework.Events
      selectors:
        # use p_any_ip_addresses because we extract ip addresses but fields are variable
        - "p_any_ip_addresses"
    - logType: Microsoft365.Audit.AzureActiveDirectory
      selectors:
        - "ActorIpAddress"
        - "ClientIP"
    - logType: Microsoft365.Audit.Exchange
      selectors:
        - "ClientIP"
        - "ClientIPAddress"
    - logType: Microsoft365.Audit.SharePoint
      selectors:
        - "ClientIP"
    - logType: Microsoft365.Audit.General
      selectors:
        - "ClientIP"
    - logType: Microsoft365.DLP.All
      selectors:
        - "ClientIP"
    - logType: Nginx.Access
      selectors:
        - "remoteAddr"
    - logType: Okta.SystemLog
      selectors:
        - "$.client.ipAddress"
    - logType: OneLogin.Events
      selectors:
        - "ipaddr"
    - logType: OnePassword.ItemUsage
      selectors:
        - "$.client.ip_address"
    - logType: OnePassword.SignInAttempt
      selectors:
        - "$.client.ip_address"
    - logType: Salesforce.Login
      selectors:
        - "CLIENT_IP"
        - "SOURCE_IP"
    - logType: Salesforce.LoginAs
      selectors:
        - "CLIENT_IP"
    - logType: Salesforce.Logout
      selectors:
        - "CLIENT_IP"
    - logType: Salesforce.URI
      selectors:
        - "CLIENT_IP"
    - logType: Slack.AccessLogs
      selectors:
        - "ip"
    - logType: Slack.AuditLogs
      selectors:
        - "$.context.ip_address"
    - logType: Sophos.Central
      selectors:
        - "$.source_info.ip"
    - logType: Suricata.Anomaly
      selectors:
        - "dest_ip"
        - "src_ip"
    - logType: Suricata.DNS
      selectors:
        - "dest_ip"
        - "src_ip"
    - logType: Zeek.DNS
      selectors:
        - "id.orig_h"
        - "id.resp_h"
    - logType: Zendesk.Audit
      selectors:
        - "ip_address"
    - logType: Zoom.Activity
      selectors:
        - "ip_address"
lookupSchema:
  logType: GreyNoise.Noise
  indexType: simple
