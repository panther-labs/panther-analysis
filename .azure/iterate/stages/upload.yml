# stages/upload.yml
parameters:
  - name: targetBranch
    type: string
    default: 'develop'
  - name: vmImage
    type: string
    default: 'ubuntu-latest'
  - name: poolName
    type: string
    default: ''
  - name: pythonVersion # Pass if upload also needs python version setup
    type: string
    default: '3.x'
stages:
  - stage: UploadArtifacts
    displayName: 'Upload Panther Analysis'
    dependsOn: ValidateAndTest # Ensure this stage runs only after validation and tests pass
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/${{ parameters.targetBranch }}'))
    jobs:
      - job: PerformUpload
        displayName: 'Perform Upload'
        pool:
          ${{ if ne(parameters.poolName, '') }}:
            name: ${{ parameters.poolName }}
          vmImage: ${{ parameters.vmImage }}
        steps:
          - checkout: self
            displayName: 'Checkout repository'
          - script: |
              pip install pipenv
            displayName: 'Install pipenv'
          - script: |
              make venv
            displayName: 'Setup virtual environment'
          - script: |
              if [ -z "$(API_HOST)" ] || [ -z "$(API_TOKEN)" ]; then
                echo "API_HOST or API_TOKEN not set. Exiting upload."
                exit 1 # Exit 1 to fail the job if API_HOST/TOKEN are required for upload
              fi
              pipenv run panther_analysis_tool upload --path ./cws/rules/ --api-host $(API_HOST) --api-token $(API_TOKEN)
            displayName: 'Upload analysis'
            env:
              API_HOST: $(API_HOST)
              API_TOKEN: $(API_TOKEN)
