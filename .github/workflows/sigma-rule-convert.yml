name: Sigma Rule Convert
on:
  schedule:
    - cron: '0 12 * * 2' 

permissions:
  contents: write
  pull-requests: write

jobs:
  sigma-rule-convert:
    name: Convert sigma rules to panther rules
    runs-on: ubuntu-latest

    steps:
      - name: Checkout OMGWINNING Panter Analysis
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #4.2.2

      - name: Checkout Sigma HQ Codebase rules
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #4.2.2
        with:
          repository: SigmaHQ/sigma
          ref: master
          path: sigma
          fetch-depth: 1

      - name: Checkout Panther Sigma Backend
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #4.2.2
        with:
          repository: panther-labs/pySigma-backend-panther
          path: pysigma-backend-panther

      - name: Set python version
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 #5.4.0
        with:
          python-version: "3.11"
                  
      - name: Verify Python version
        run: python --version

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Verify Poetry version
        run: poetry --version

      - name: Install dependencies
        run: | 
          cd pysigma-backend-panther
          poetry install

      - name: Create temp rules directory
        run: |
          mkdir temp_rules/

      - name: Run the conversion script agaisnt sigma rules
        run: |
          cd pysigma-backend-panther
          poetry run  sigma convert --skip-unsupported -t panther -f default ../sigma/rules -O output_dir=../temp_rules/
        continue-on-error: true

      - name: Run the conversion script agaisnt sigma rules emerging threats
        run: |
          mkdir rules/sigma_rules/
          cd pysigma-backend-panther
          poetry run  sigma convert --skip-unsupported -t panther -f default ../sigma/rules-emerging-threats -O output_dir=../temp_rules/
        continue-on-error: true

      - name: Run the conversion script agaisnt sigma rules threat hunting
        run: |
          cd pysigma-backend-panther
          poetry run  sigma convert --skip-unsupported -t panther -f default ../sigma/rules-threat-hunting -O output_dir=../temp_rules/
        continue-on-error: true

      - name: Validate the converted rules
        run: |
          ls -la temp_rules/


      - name: Create pack and fix collisions
        run: |
          pip install pyyaml
          python .scripts/sigma_pack_and_cleanup.py


      - name: Move temp rules to sigma rules 
        run: |
          mv temp_rules/* rules/sigma_rules/

      - name: Set up Git user
        run: |
          git config --global user.email "sa-gh-alchemy-github-bot@alchemy.com"
          git config --global user.name "sa-gh-alchemy-github-bot"

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@82a020f1f7f605c65dd2449b392a52c3fcfef7ef #6.0.0
        with:
          gpg_private_key: ${{ secrets.PANTHER_BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PANTHER_BOT_GPG_PRIVATE_KEY_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

          
      - name: Update Repo with latest Sigma Rules
        run: |
          git add rules/sigma_rules/
          git add packs/alchemy_sigma.yml
          git status
          git commit -m "Update Sigma Rules with latest changes" --gpg-sign
          git push origin HEAD:update-sigma-rules-${GITHUB_RUN_ID}

      - name: Clean up temp files
        run: |
          rm -rf  pysigma-backend-panther/
          rm -rf sigma/

      - name: Ensure working directory is clean
        run: |
          git status
          git diff --exit-code

      - name: Create PR with GitHub CLI
        run: |
          gh pr create \
            --title "Update Panther with latest Sigma Rules" \
            --body "Automated update from Panther Analysis repository" \
            --base develop \
            --head update-sigma-rules-${GITHUB_RUN_ID}
        env:
          GH_TOKEN: ${{ secrets.GIT_ENV_API_TOKEN }}
