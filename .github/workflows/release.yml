name: Panther Analysis Release

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      GITHUB_TOKEN: ${{ secrets.PANTHER_BOT_AUTOMATION_TOKEN }}
    steps:
      - uses: step-security/harden-runner@c95a14d0e5bab51a9f56296a4eb0e416910cd350 # v2.10.3
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          fetch-depth: 0
          token: ${{ env.GITHUB_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: panther-analysis-release
      - name: Install Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b #v5.3.0
        with:
          python-version: "3.11"
      - name: Create new panther-analysis release
        run: |
          export AWS_REGION=${{ secrets.AWS_REGION }}
          export AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}
          export OLD_VERSION=$(gh release list | grep Latest | awk '{print $1}')
          export NEW_VERSION=$(echo $OLD_VERSION | awk -F. '{printf "%s.%d.0", $1, $2+1}')
          pip3 install --user pipenv
          rm -rf $(pipenv --venv)
          make install
          pipenv run panther_analysis_tool release --kms-key ${{ secrets.KMS_KEY_ARN }}
          openssl dgst -binary -sha512 panther-analysis-all.zip > ${{ secrets.DIGEST_FILE }}
          aws kms verify --key-id ${{ secrets.KMS_KEY_ARN }} --signing-algorithm ${{ secrets.SIGNING_ALGORITHM }} --message fileb://${{ secrets.DIGEST_FILE }} --message-type DIGEST --output json --signature $(cat panther-analysis-all.sig) | jq '.SignatureValid'
          gh release create $NEW_VERSION panther-analysis-all.* --title $NEW_VERSION --latest --generate-notes
