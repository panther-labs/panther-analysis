# Monitors for account creation and adds an entry to the KVStore for the user. This depends on the
# event_type of ACCOUNT_CREATED to be in the data model for the log source and will work in tandem
# with a helper function that checks for the userid in the KV store.

AnalysisType: rule
Filename: new_account_logging.py
RuleID: Standard.NewAccountCreated
DisplayName: New User Account Created
Enabled: true
LogTypes:
  - OneLogin.Events
Tags:
  - DataModel
  - IndicatorCollection
  - OneLogin
Severity: Info
Reports:
  MITRE ATT&CK:
    - Persistence:Create Account
Description: A new account was created
Runbook: A new user account was created, ensure it was created through standard practice and is for a valid purpose.
SummaryAttributes:
  - user_name
  - user_id
Tests:
  -
    Name: User Creation Event
    ExpectedResult: true
    Mocks:
      - objectName: put_string_set
        returnValue: >-
      - objectName: set_key_expiration
        returnValue: >-
    Log:
      {
        'event_type_id': 13,
        'actor_user_id': 123456,
        'actor_user_name': 'Bob Cat',
        'user_id': 123456,
        'user_name': 'Bob Cat',
        'p_event_time': '2021-06-27 00:08:28.792Z',
        'p_log_type': 'OneLogin.Events',
        'p_row_id': 'aaaaaaaabbbbbbbbbbbbccccccccc'
      }
  -
    Name: Standard Login Event
    ExpectedResult: false
    Log:
      {
        'event_type_id': 5,
        'actor_user_id': 123456,
        'actor_user_name': 'Bob Cat',
        'user_id': 123456,
        'user_name': 'Bob Cat',
        'ipaddr': '192.168.1.1',
        'p_event_time': '2021-06-27 00:08:28.792Z',
        'p_log_type': 'OneLogin.Events',
        'p_row_id': 'aaaaaaaabbbbbbbbbbbbccccccccc'
      }
